---
import CardTasa from "../components/calculadora/CardTasa.astro";
import Trends from "../components/Trends.astro"
import Layout from "../layouts/Layout.astro";
---

<Layout title="Calculadora" >
    <div id="calApp">
        <div id="containerInputs" role="group" aria-labelledby="inputGroupHeading">
            <p>Monto en dólares</p>
            <div class="inputGroup">
                <label for="usd">$</label>
                <input type="number" step="0.01" id="usd" aria-label="Introducir monto en Dólares Americanos" placeholder="100" value="100">
            </div>
            <p>Monto en bolívares</p>
            <div class="inputGroup">
                <label for="bs">Bs</label>
                <input type="number" step="0.01" id="bs" aria-label="Introducir monto en Bolívares Soberanos" placeholder="100" >
            </div>
            <div id="access-group">
                <button class="access">10</button>
                <button class="access">20</button>
                <button class="access">50</button>
                <button class="access">100</button>
                <button class="access">200</button>
            </div>
        </div>
        <!-- tarjetas de tasas de cambio -->
        <div id="contenedorTasas">
            <CardTasa/>
        </div>
        <div id="conversion-result">
            <h3 class="result-title">Resultado</h3>
            <Trends />  
        </div>
    </div>

</Layout>

<script>

    const state={
        currentTasa:"promedio",
        tasas:{  
        bcv:{
            change: 0.06,
            color: "green",
            image: "https://res.cloudinary.com/dcpyfqx87/image/upload/v1729921478/monitors/public_id:bcv.webp",
            last_update: "26/05/2025, 12:00 AM",
            percent: 0.06,
            price: 0,
            price_old: 95.02,
            symbol: "▲",
            title: "BCV"
        },
            promedio:{
                image: "https://cdn-icons-png.flaticon.com/512/11037/11037237.png",
                price: 0,
                title: "Promedio"
            },
            paralelo:{
            change: 0.06,
            color: "green",
            image: "https://res.cloudinary.com/dcpyfqx87/image/upload/v1729921479/monitors/public_id:epv.webp",
            last_update: "26/05/2025, 12:00 AM",
            percent: 0.06,
            price: 0,
            price_old: 95.02,
            symbol: "▲",
            title: "Paralelo"
        }
            
        },
        resultado:0
    }
 
    const dom: {
        bsInput:HTMLInputElement | null
        usdInput:HTMLInputElement | null
        bcvCard:any
        promedioCard:any
        paraleloCard:any
        predefineBtns:any
    }={
        bsInput: null,
        usdInput:null,
        bcvCard: null,
        promedioCard: null,
        paraleloCard: null,
        predefineBtns:null
    }
   
    document.addEventListener("astro:page-load",async()=>{
        //Obtener inputs del DOM
        const usdInput = document.getElementById("usd")
        const bsInput = document.getElementById("bs")
        if(usdInput instanceof HTMLInputElement) dom.usdInput = usdInput
        if(bsInput instanceof HTMLInputElement) dom.bsInput = bsInput
        //Obtener tarjetas de tasas del DOM
        const cards = document.getElementsByClassName("rate-value");
        if (cards && cards.length > 0) {
            dom.bcvCard = cards[0]
            dom.promedioCard = cards[1]
            dom.paraleloCard = cards[2]
        }
        //Obtener botones de montos predefinidos
        const predefineBtns = document.querySelectorAll("#access-group .access")
        if (predefineBtns && predefineBtns.length > 0){
            dom.predefineBtns = predefineBtns
        }
        ////Añadir Listeners
        addListeners()
        calculateRates(null)
        if(window.SharedWorker){
            
              window.sharedWorker.port.onmessage = (event) => {
                const {rates,currentTasa} = event.data.response
                if(rates){
                    state.tasas.bcv.price = rates.bcv
                    state.tasas.paralelo.price = rates.paralelo
                    calculateRates(null)
                }
                
                if(currentTasa){
                    state.currentTasa =  event.data.response.currentTasa ;
                    calculateRates(null)
                }
                
              };
              
            }
    })

   const addListeners = ():void=>{
    dom.usdInput?.addEventListener("input",()=>calculateRates(null))
    dom.bsInput?.addEventListener("input",()=>calculateRates(dom.usdInput))
    if (dom.predefineBtns && dom.predefineBtns.length > 0){
            for(let btn of dom.predefineBtns){
                btn.addEventListener("click",()=>{
                    if(dom.usdInput){
                        dom.usdInput.value = btn.textContent
                        dom.usdInput.dispatchEvent(new Event("input"))
                    }
                })
            }
        }
    
   }
   const calculateRates = (resultInput:HTMLInputElement | null):void=>{
     // 1. Calcular tasa promedio
    state.tasas.promedio.price = parseFloat(
        ((state.tasas.bcv.price + state.tasas.paralelo.price) / 2).toFixed(2)
    );

    // 2. Obtener tasa actual segura
    const currentRate = state.tasas[state.currentTasa as keyof typeof state.tasas]?.price || 1;
    
    // 3. Determinar dirección de conversión
    const isConvertingToUSD = resultInput !== null;
    
    if (isConvertingToUSD) {
        // Caso BS → USD (cuando se escribe en bsInput)
        if (dom.bsInput) {
            const montoBS = parseFloat(dom.bsInput.value) || 0;
            const resultUSD = montoBS / currentRate;
            resultInput.value = resultUSD.toFixed(2);
        }
    } else {
        // Caso USD → BS (cuando se escribe en usdInput)
        if (dom.usdInput) {
            const montoUSD = parseFloat(dom.usdInput.value) || 0;
            const resultBS = montoUSD * currentRate;
            if (dom.bsInput) {
                dom.bsInput.value = resultBS.toFixed(2);
            }
        }
    }

    updateUI();
   }

   const updateUI = ()=>{
        dom.bcvCard.textContent = state.tasas.bcv.price+ " Bs/$"
        dom.promedioCard.textContent = state.tasas.promedio.price+ " Bs/$"
        dom.paraleloCard.textContent = state.tasas.paralelo.price+ " Bs/$"
   }

</script>

<style is:inline >
    #calApp,#access-group{
        display: flex;
        flex-flow: row wrap;
        justify-content: space-between;
    }
    #access-group{
        margin-top: 12px;
        justify-content: space-around;
    }
    #bs,#usd{
        padding-left: 32px;
        width: 100%;
        position: relative;
        font-size: 100%;
    }
    #bs{
        padding-left: 36px;
    }
    #access-group{
        button{
            background-color: var(--bg-cards);
            border-radius: var(--rounded);
            padding: 7px 15px;
            transition: background-color .7s ease-in-out;
        }
    }
    #access-group button:before{
        content: "$";
        margin-right: 5px;
    }
    #access-group button:hover{
        background-color: var(--color-borders);
    }
    #containerInputs .inputGroup{position: relative; margin: 5px 0;}
    #containerInputs label{
        position: absolute;
        z-index: 2;
        opacity: .8;
        top:11px;
        left: 11px;
        font-size: 100%;
        font-weight: 450;
    }
    #containerInputs p{
        font-weight: 500;
    }
    /*/////////css de arriba//////////*/
    #containerInputs,#contenedorTasas{
        margin-bottom: 1.5rem;
        padding: 5px;
        width: 100%;
    }
    #contenedorTasas {
    display: grid;
    grid-template-columns: 1fr;
    gap: 1rem;
  }

  @media (min-width: 768px) {
    #contenedorTasas {
      grid-template-columns: repeat(3, 1fr);
      order:1;
    }
    #containerInputs{
        order: 2;
        width: 49%;
    }
    #conversion-result{
        order: 3;
        width: 49%;
    }
  }

  

</style>