---
import { ClientRouter } from "astro:transitions";
import BackLink from "../components/BackLink.astro";
export interface Props {
  title?: String;
  backBtn?:Boolean;
  menu?:Boolean;
}

const { title = "CambiApp", backBtn=false, menu=false } = Astro.props;
---

<!doctype html>
<html lang="es">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>{title}</title>

    <!-- Favicon -->
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />

    <!-- Meta tags -->
    <meta
      name="description"
      content="CambiApp: Calcula tasas de cambio al instante con precisi√≥n. ¬°Compara divisas, criptomonedas y m√°s en segundos! Descarga gratis ahora."
    />
    <ClientRouter />
  </head>
  <body>
    <header>
      
      <button class="hamburger-menu" aria-label="Abrir men√∫ de navegaci√≥n">
            <span class="bar"></span>
          <span class="bar"></span>
          <span class="bar"></span>
      </button>
      
      <h1>{title}</h1>
    <nav class="app-nav">
      <ul>
        <li><a href="/">Calculadora</a></li>
        <li><a href="/history">historial</a></li>
      </ul>
    </nav>
    <button id="theme-toggle" aria-label="Cambiar tema">
          <span class="light-icon">‚òÄÔ∏è</span>
          <span class="dark-icon">üåô</span>
      </button>
  </header>

    <main>
      <slot />
      <!-- Aqu√≠ se insertar√° el contenido de las p√°ginas que usen este layout -->
    </main>

    <footer>
    </footer>
  </body>
</html>
<style is:global>
  :root {
    --bg-app: rgb(240, 240, 240);
    --color-borders: rgb(211, 210, 210);
    --font-color: rgb(28, 28, 28);
    --bg-cards:rgb(231, 230, 230);
    --primary: rgb(3 105 161);
    --secondary: rgb(70, 69, 69);
    --success: hsl(123, 91%, 46%);
    --danger: rgb(224, 43, 11);
    --rounded:.37rem;
  }
  [data-theme="dark"] {
    --bg-app: rgb(0, 0, 0);
    --font-color: rgb(255, 255, 255);
    --bg-cards:rgb(30, 30, 30);
  }
  * {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family:
      ui-sans-serif,
      system-ui,
      sans-serif,
      "Apple Color Emoji",
      "Segoe UI Emoji",
      Segoe UI Symbol,
      "Noto Color Emoji";
    -webkit-font-smoothing: antialiased;
    color: var(--font-color);
  }
  .dark-icon {
    display: none;
  }

  [data-theme="dark"] .light-icon {
    display: none;
  }

  [data-theme="dark"] .dark-icon {
    display: inline;
  }
  input,button, option, select {
    border: 1px solid var(--color-borders);
    background-color: var(--bg-app);
    padding: 10px;
    outline: none;
    border-radius: var(--rounded);
  }
  select{
    width: 100%;
    position: relative;
    appearance: none;
    -webkit-appearance: none;
    -moz-appearance: none;
  }
  select::after {
  content: "‚ñº";
  position: absolute;
  right: 15px; /* Ajusta este valor para mover la flecha */
  top: 50%;
  transform: translateY(-50%);
  pointer-events: none; /* Permite hacer clic en el select */
}
  button{
    cursor: pointer;
  }
  input:focus,button:focus{
    border-color: var(--font-color);
  }
  
  html {
    background-color: var(--bg-app);
  }
  p {
    line-height: 1.5;
  }
  footer,header,main {
    padding: 5px 2% 5px 2%;
  }
  main,.container{
    max-width: 1366px;
    margin: auto;
  }
  header{
    position: fixed;
    top:0;
    background-color: var(--bg-app);
    z-index: 2;
    width: 100%;
    display: flex;
    flex-flow: row nowrap;
    align-items: center;
    justify-content: space-between;
  }
  header h1{
    font-size: 1.5rem;
  }
  /* Bot√≥n de Hamburguesa */
.hamburger-menu {
    display: flex; /* Para centrar las barras */
    flex-direction: column; /* Apila las barras verticalmente */
    justify-content: space-around; /* Espacio entre las barras */
    width: 30px;
    height: 25px;
    background: transparent;
    border: none;
    cursor: pointer;
    padding: 0;
    z-index: 4; /* Asegura que est√© por encima del men√∫ */
}

.hamburger-menu .bar {
    display: block;
    width: 100%;
    height: 3px;
    background-color: var(--font-color);
    border-radius: 5px;
    transition: all 0.3s ease-in-out; /* Transici√≥n para el efecto de cerrar */
}

/* Estilos para el √≠cono de cerrar (cuando el men√∫ est√° abierto) */
.hamburger-menu.active .bar:nth-child(1) {
    transform: translateY(6px) rotate(45deg);
}

.hamburger-menu.active .bar:nth-child(2) {
    opacity: 0; /* Oculta la barra del medio */
}

.hamburger-menu.active .bar:nth-child(3) {
    transform: translateY(-11px) rotate(-45deg);
}
/* Men√∫ de Navegaci√≥n */
.app-nav {
    /* Por defecto, oculto y fuera de la pantalla en m√≥viles */
    position: absolute;
    top: 100%; /* Justo debajo del header */
    left: 0;
    width: 100%;
    background-color: var(--bg-cards); /* Color de fondo del men√∫ desplegado */
    transform: translateX(-100%); /* Oculto a la izquierda */
    transition: transform 0.3s ease-in-out;
    z-index: 3; /* Debajo del bot√≥n hamburguesa */
    height: auto; /* Ajusta la altura al contenido */
    overflow: hidden; /* Evita barras de desplazamiento si el contenido es largo */
}

.app-nav.active {
    transform: translateX(0); /* Muestra el men√∫ desliz√°ndose */
}

.app-nav ul {
    list-style: none;
    padding: 10px 0;
    text-align: center;
}

.app-nav ul li {
    margin: 10px 0;
}

.app-nav ul li a {
    color: var(--font-color);
    text-decoration: none;
    padding: 10px 20px;
    display: block; /* Para que todo el √°rea del li sea clicable */
    transition: background-color 0.2s ease;
}

.app-nav ul li a:hover,
.app-nav ul li a.active-link { /* active-link para resaltar la p√°gina actual */
    background-color: var(--bg-cards);
}
/* Media Query para pantallas grandes (Desktop First a partir de aqu√≠) */
@media (min-width: 768px) {
    .hamburger-menu {
        display: none; /* Oculta el bot√≥n de hamburguesa en pantallas grandes */
    }

    .app-nav {
        position: static; /* Quita el posicionamiento absoluto */
        transform: translateX(0); /* Asegura que siempre est√© visible */
        width: auto;
        background-color: transparent; /* Fondo transparente en desktop */
        box-shadow: none;
        display: block !important; /* Asegura que el men√∫ sea visible si JS lo oculta */
    }

    .app-nav ul {
        display: flex; /* Los elementos se alinean horizontalmente */
        padding: 0;
    }

    .app-nav ul li {
        margin: 0 15px; /* Espacio entre los elementos */
    }

    .app-nav ul li a {
        padding: 5px 0; /* Ajusta el padding para desktop */
        color: var(--font-color); /* Vuelve a color blanco en desktop */
        background-color: transparent;
    }

    .app-nav ul li a:hover {
       background-color: transparent;
    }
}
  body{
    padding-top: 60px;
  }
</style>

<script>
  document.addEventListener("astro:page-load", () => {
    const themeToggle = document.getElementById("theme-toggle");
    const prefersDarkScheme = window.matchMedia("(prefers-color-scheme: dark)");

    // Comprobar preferencias del sistema o almacenamiento local
    const currentTheme =
      localStorage.getItem("theme") ||
      (prefersDarkScheme.matches ? "dark" : "light");

    if (currentTheme === "dark") {
      document.documentElement.setAttribute("data-theme", "dark");
    }

    // Escuchar cambios en las preferencias del sistema
    prefersDarkScheme.addEventListener("change", (e) => {
      if (!localStorage.getItem("theme")) {
        document.documentElement.setAttribute(
          "data-theme",
          e.matches ? "dark" : "light",
        );
      }
    });

    // Manejar el bot√≥n de toggle
    themeToggle.addEventListener("click", () => {
      const newTheme =
        document.documentElement.getAttribute("data-theme") === "dark"
          ? "light"
          : "dark";

      document.documentElement.setAttribute("data-theme", newTheme);
      localStorage.setItem("theme", newTheme);
    });


     const hamburgerMenu = document.querySelector('.hamburger-menu');
    const navMenu = document.querySelector('.app-nav');

    if (hamburgerMenu && navMenu) {
        hamburgerMenu.addEventListener('click', () => {
            navMenu.classList.toggle('active');
            hamburgerMenu.classList.toggle('active'); // Para animar el icono de hamburguesa
        });

        // Opcional: Cerrar el men√∫ al hacer clic en un enlace (para SPA o scroll)
        navMenu.querySelectorAll('a').forEach(link => {
            link.addEventListener('click', () => {
                if (window.innerWidth < 768) { // Solo si estamos en vista m√≥vil
                    navMenu.classList.remove('active');
                    hamburgerMenu.classList.remove('active');
                }
            });
        });
    } 


  });
</script>
