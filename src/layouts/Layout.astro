---
import { ClientRouter } from "astro:transitions";
import BackLink from "../components/BackLink.astro";
export interface Props {
  title?: String;
  backBtn?:Boolean
}

const { title = "CambiApp", backBtn=false } = Astro.props;
---

<!doctype html>
<html lang="es">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>{title}</title>

    <!-- Favicon -->
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />

    <!-- Meta tags -->
    <meta
      name="description"
      content="CambiApp: Calcula tasas de cambio al instante con precisi√≥n. ¬°Compara divisas, criptomonedas y m√°s en segundos! Descarga gratis ahora."
    />
    <ClientRouter />
  </head>
  <body>
    <header>
    <nav class="app-nav">
      {backBtn?(<BackLink/>):null}
      <h1>{title}</h1>
      <button id="theme-toggle" aria-label="Cambiar tema">
          <span class="light-icon">‚òÄÔ∏è</span>
          <span class="dark-icon">üåô</span>
      </button>
    </nav>
  </header>

    <main>
      <slot />
      <!-- Aqu√≠ se insertar√° el contenido de las p√°ginas que usen este layout -->
    </main>

    <footer>
    </footer>
  </body>
</html>
<style is:global>
  :root {
    --bg-app: hsl(0, 0%, 94%);
    --color-borders: hsl(0, 0%, 37%);
    --font-color: hsl(0, 0%, 11%);
    --bg-cards:hsl(0, 1%, 85%);
    --primary: hsl(217 89% 50%);
    --secondary: hsl(217.2 32.6% 17.5%);
    --success: hsl(123, 91%, 46%);
    --danger: hsl(9, 91%, 46%);
  }
  [data-theme="dark"] {
    --bg-app: #000000;
    --font-color: #ffffff;
    --bg-cards:#1e1e1e;
  }
  * {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family:
      ui-sans-serif,
      system-ui,
      sans-serif,
      "Apple Color Emoji",
      "Segoe UI Emoji",
      Segoe UI Symbol,
      "Noto Color Emoji";
    font-weight: 500;
    -webkit-font-smoothing: antialiased;
    color: var(--font-color);
  }
  .dark-icon {
    display: none;
  }

  [data-theme="dark"] .light-icon {
    display: none;
  }

  [data-theme="dark"] .dark-icon {
    display: inline;
  }
  input,button, option, select {
    border: 2px solid var(--color-borders);
    background-color: var(--bg-app);
    padding: 10px;
    outline: none;
    border-radius: 7px;
  }
  button{
    cursor: pointer;
  }
  input:focus,button:focus{
    border-color: var(--font-color);
  }
  label{
    color: var(--font-color);
  }
  html {
    background-color: var(--bg-app);
  }
  p {
    line-height: 1.5;
  }
  .app-nav {
    width: 100%;
    display: flex;
    flex-flow: row nowrap;
    justify-content: space-around;
    align-items: center;
  }
  .app-nav a {
    text-decoration: none;
    display: inline-flex;
    align-items: center;
  }
  .app-nav a strong {
    margin-right: 5px;
  }
  footer,header,main {
    padding: 5px 2% 5px 2%;
  }
</style>

<script is:inline>
  document.addEventListener("DOMContentLoaded", () => {
    const themeToggle = document.getElementById("theme-toggle");
    const prefersDarkScheme = window.matchMedia("(prefers-color-scheme: dark)");

    // Comprobar preferencias del sistema o almacenamiento local
    const currentTheme =
      localStorage.getItem("theme") ||
      (prefersDarkScheme.matches ? "dark" : "light");

    if (currentTheme === "dark") {
      document.documentElement.setAttribute("data-theme", "dark");
    }

    // Escuchar cambios en las preferencias del sistema
    prefersDarkScheme.addEventListener("change", (e) => {
      if (!localStorage.getItem("theme")) {
        document.documentElement.setAttribute(
          "data-theme",
          e.matches ? "dark" : "light",
        );
      }
    });

    // Manejar el bot√≥n de toggle
    themeToggle.addEventListener("click", () => {
      const newTheme =
        document.documentElement.getAttribute("data-theme") === "dark"
          ? "light"
          : "dark";

      document.documentElement.setAttribute("data-theme", newTheme);
      localStorage.setItem("theme", newTheme);
    });

  });
</script>
